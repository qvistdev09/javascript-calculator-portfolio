{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","props","state","gridItemWidth","gridItemHeight","upperOutput","lowerOutput","decimals","upperLast","calcState","digitLimit","warningBlock","isValid","bind","onCalcButtonPress","categorizeInput","numberLimit","input","category","this","btn","length","setState","calcResult","slice","savedResult","test","Math","round","eval","savedValue","setTimeout","id","style","gridTemplateColumns","gridTemplateRows","OutputField","upper","lower","CalcButton","label","gridArea","btnClass","press","React","Component","className","onClick"],"mappings":"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","file":"static/js/main.ea6fe4cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridItemWidth: 4,\n      gridItemHeight: 4,\n      upperOutput: '',\n      lowerOutput: '0',\n      decimals: false,\n      upperLast: '',\n      calcState: 'zero',\n    };\n    this.digitLimit = 24;\n    this.warningBlock = false;\n    this.isValid = this.isValid.bind(this);\n    this.onCalcButtonPress = this.onCalcButtonPress.bind(this);\n    this.categorizeInput = this.categorizeInput.bind(this);\n    this.numberLimit = this.numberLimit.bind(this);\n  }\n\n  isValid(input, category) {\n    if (input === 'AC') {\n      return true;\n    }\n\n    switch (this.state.calcState) {\n      case 'zero':\n        if (\n          category === 'digit' ||\n          category === 'decimal' ||\n          input === '-' ||\n          category === 'equals' ||\n          category === 'zero'\n        ) {\n          return true;\n        } else if (category === 'operator' && this.state.upperOutput !== '') {\n          return true;\n        } else {\n          return false;\n        }\n      case 'operator':\n        if (\n          category === 'digit' ||\n          category === 'zero' ||\n          category === 'operator' ||\n          category === 'decimal'\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      case 'digit':\n        if (\n          category === 'digit' ||\n          category === 'zero' ||\n          category === 'operator'\n        ) {\n          return true;\n        } else if (category === 'decimal' && this.state.decimals === false) {\n          return true;\n        } else if (category === 'equals') {\n          return true;\n        } else {\n          return false;\n        }\n      case 'decimal':\n        if (\n          category === 'digit' ||\n          category === 'zero' ||\n          category === 'operator' ||\n          category === 'equals'\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      case 'result':\n        if (\n          category === 'digit' ||\n          category === 'operator' ||\n          category === 'decimal' ||\n          category === 'zero'\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      default:\n        return false;\n    }\n  }\n\n  categorizeInput(input) {\n    switch (input) {\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        return 'digit';\n      case '0':\n        return 'zero';\n      case '.':\n        return 'decimal';\n      case '=':\n        return 'equals';\n      case '*':\n      case '/':\n      case '-':\n      case '+':\n        return 'operator';\n      case 'AC':\n        return 'AC';\n      default:\n        return 'unrecognized';\n    }\n  }\n\n  onCalcButtonPress(btn) {\n    if (this.warningBlock) {\n      return;\n    }\n\n    const category = this.categorizeInput(btn);\n\n    if (this.state.lowerOutput.length >= this.digitLimit) {\n      if (\n        category === 'digit' ||\n        category === 'zero' ||\n        category === 'decimal'\n      ) {\n        this.numberLimit();\n        return;\n      }\n    }\n\n    if (!this.isValid(btn, category)) {\n      return;\n    }\n\n    switch (category) {\n      case 'AC':\n        this.setState({\n          calcState: 'zero',\n          upperLast: '',\n          upperOutput: '',\n          lowerOutput: '0',\n          decimals: false,\n        });\n        break;\n      case 'zero':\n        if (this.state.calcState === 'zero') {\n          this.setState({\n            calcResult: 'zero',\n            upperLast: '0',\n            upperOutput: '0',\n            lowerOutput: '0',\n          });\n        } else if (this.state.calcState === 'result') {\n          this.setState({\n            calcState: 'zero',\n            upperLast: '0',\n            upperOutput: '0',\n            lowerOutput: '0',\n            decimals: false,\n          });\n        } else if (this.state.calcState === 'operator') {\n          this.setState((state) => ({\n            calcState: 'zero',\n            upperLast: '0',\n            upperOutput: state.upperOutput + btn,\n            lowerOutput: btn,\n          }));\n        } else {\n          this.setState((state) => ({\n            calcState: 'digit',\n            upperLast: '0',\n            upperOutput: state.upperOutput + '0',\n            lowerOutput: state.lowerOutput + '0',\n          }));\n        }\n        break;\n      case 'digit':\n        if (this.state.calcState === 'result') {\n          this.setState({\n            calcState: 'digit',\n            upperLast: btn,\n            upperOutput: btn,\n            lowerOutput: btn,\n            decimals: false,\n          });\n        } else if (this.state.calcState === 'zero') {\n          this.setState((state) => ({\n            calcState: 'digit',\n            upperLast: btn,\n            upperOutput:\n              state.upperOutput.slice(0, state.upperOutput.length - 1) + btn,\n            lowerOutput: btn,\n          }));\n        } else if (this.state.calcState === 'operator') {\n          this.setState((state) => ({\n            calcState: 'digit',\n            upperLast: btn,\n            upperOutput: state.upperOutput + btn,\n            lowerOutput: btn,\n          }));\n        } else {\n          this.setState((state) => ({\n            calcState: 'digit',\n            upperLast: btn,\n            upperOutput: state.upperOutput + btn,\n            lowerOutput: state.lowerOutput + btn,\n          }));\n        }\n        break;\n      case 'operator':\n        if (this.state.calcState === 'result') {\n          const savedResult = this.state.lowerOutput;\n          this.setState({\n            calcState: 'operator',\n            upperLast: btn,\n            upperOutput: savedResult + btn,\n            lowerOutput: btn,\n            decimals: false,\n          });\n        } else if (this.state.calcState === 'operator') {\n          if (this.state.upperLast === btn) {\n            return;\n          } else if (this.state.upperLast !== '-' && btn === '-') {\n            this.setState((state) => ({\n              calcState: 'operator',\n              upperLast: btn,\n              upperOutput: state.upperOutput + btn,\n              lowerOutput: btn,\n              decimals: false,\n            }));\n          } else {\n            if (\n              /(\\*|\\/|\\+|-)/.test(\n                this.state.upperOutput[this.state.upperOutput.length - 2]\n              )\n            ) {\n              this.setState((state) => ({\n                calcState: 'operator',\n                upperLast: btn,\n                upperOutput:\n                  state.upperOutput.slice(0, state.upperOutput.length - 2) +\n                  btn,\n                lowerOutput: btn,\n                decimals: false,\n              }));\n            } else {\n              this.setState((state) => ({\n                calcState: 'operator',\n                upperLast: btn,\n                upperOutput:\n                  state.upperOutput.slice(0, state.upperOutput.length - 1) +\n                  btn,\n                lowerOutput: btn,\n                decimals: false,\n              }));\n            }\n          }\n        } else {\n          this.setState((state) => ({\n            calcState: 'operator',\n            upperLast: btn,\n            upperOutput: state.upperOutput + btn,\n            lowerOutput: btn,\n            decimals: false,\n          }));\n        }\n        break;\n      case 'equals':\n        const calcResult =\n          // eslint-disable-next-line\n          Math.round(eval(this.state.upperOutput) * 10000000) / 10000000;\n        this.setState((state) => ({\n          calcState: 'result',\n          upperLast: '',\n          upperOutput: state.upperOutput + '=' + calcResult,\n          lowerOutput: calcResult,\n          decimals: false,\n        }));\n        break;\n      case 'decimal':\n        if (this.state.calcState === 'operator') {\n          this.setState((state) => ({\n            calcState: 'decimal',\n            upperLast: '.',\n            upperOutput: state.upperOutput + '0.',\n            lowerOutput: '0.',\n            decimals: true,\n          }));\n        } else if (this.state.calcState === 'result') {\n          this.setState({\n            calcState: 'decimal',\n            upperLast: '.',\n            upperOutput: '0.',\n            lowerOutput: '0.',\n            decimals: true,\n          });\n        } else if (this.state.calcState === 'zero') {\n          if (this.state.upperOutput === '') {\n            this.setState({\n              calcState: 'decimal',\n              upperLast: '.',\n              upperOutput: '0.',\n              lowerOutput: '0.',\n              decimals: true,\n            });\n          } else {\n            this.setState((state) => ({\n              calcState: 'decimal',\n              upperLast: '.',\n              upperOutput: state.upperOutput + btn,\n              lowerOutput: state.lowerOutput + btn,\n              decimals: true,\n            }));\n          }\n        } else {\n          this.setState((state) => ({\n            calcState: 'decimal',\n            upperLast: '.',\n            upperOutput: state.upperOutput + '.',\n            lowerOutput: state.lowerOutput + '.',\n            decimals: true,\n          }));\n        }\n        break;\n      default:\n        return;\n    }\n  }\n\n  numberLimit() {\n    if (this.warningBlock) {\n      return;\n    }\n\n    this.warningBlock = true;\n    const savedValue = this.state.lowerOutput;\n    this.setState({\n      lowerOutput: 'MAX DIGITS REACHED',\n    });\n    setTimeout(() => {\n      this.setState({ lowerOutput: savedValue });\n      this.warningBlock = false;\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div\n        id=\"calculator\"\n        style={{\n          gridTemplateColumns: 'repeat(4, ' + this.state.gridItemWidth + 'rem)',\n          gridTemplateRows:\n            'minmax(4rem, max-content) repeat(5, ' +\n            this.state.gridItemHeight +\n            'rem)',\n        }}\n      >\n        <OutputField\n          upper={this.state.upperOutput}\n          lower={this.state.lowerOutput}\n        />\n        <CalcButton\n          label={'AC'}\n          gridArea={'AC'}\n          btnClass=\"AC hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"clear\"\n        />\n        <CalcButton\n          label={'/'}\n          btnClass=\"light hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"divide\"\n        />\n        <CalcButton\n          label={'*'}\n          btnClass=\"light hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"multiply\"\n        />\n        <CalcButton\n          label={'7'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"seven\"\n        />\n        <CalcButton\n          label={'8'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"eight\"\n        />\n        <CalcButton\n          label={'9'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"nine\"\n        />\n        <CalcButton\n          label={'-'}\n          btnClass=\"light hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"subtract\"\n        />\n        <CalcButton\n          label={'4'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"four\"\n        />\n        <CalcButton\n          label={'5'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"five\"\n        />\n        <CalcButton\n          label={'6'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"six\"\n        />\n        <CalcButton\n          label={'+'}\n          btnClass=\"light hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"add\"\n        />\n        <CalcButton\n          label={'1'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"one\"\n        />\n        <CalcButton\n          label={'2'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"two\"\n        />\n        <CalcButton\n          label={'3'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"three\"\n        />\n        <CalcButton\n          label={'='}\n          gridArea=\"equal\"\n          btnClass=\"equal hoverable rounded-corner-right\"\n          press={this.onCalcButtonPress}\n          id=\"equals\"\n        />\n        <CalcButton\n          label={'0'}\n          gridArea=\"zero\"\n          btnClass=\"dark hoverable rounded-corner-left\"\n          press={this.onCalcButtonPress}\n          id=\"zero\"\n        />\n        <CalcButton\n          label={'.'}\n          btnClass=\"dark hoverable\"\n          press={this.onCalcButtonPress}\n          id=\"decimal\"\n        />\n      </div>\n    );\n  }\n}\n\nfunction CalcButton(props) {\n  return (\n    <button\n      className={props.btnClass ? props.btnClass + ' calc-child' : 'calc-child'}\n      style={\n        props.gridArea ? { gridArea: props.gridArea } : { gridArea: 'initial' }\n      }\n      onClick={() => props.press(props.label)}\n      id={props.id}\n    >\n      {props.label}\n    </button>\n  );\n}\n\nfunction OutputField(props) {\n  return (\n    <div className=\"calc-child output\" style={{ gridArea: 'output' }}>\n      <div className=\"output-row\">{props.upper}</div>\n      <div className=\"output-row\" id=\"display\">\n        {props.lower}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}